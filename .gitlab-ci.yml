default:
   image: "registry.gitlab.com/synsense/rockpool/test:latest"

stages:
  - test
  - docs
  - docs_deploy
  - build
  - deploy

latest_tests:
  stage: test
  parallel: 4
  image: "registry.gitlab.com/synsense/rockpool:raw"
  before_script:
    - conda update --all
    - conda env update --name base --file images/test/resources/base.yml
    - pip install --upgrade pip
    - pip install --upgrade .[all] --no-cache-dir
    - pip install --upgrade jax jaxlib sphinx-rtd-theme sphinx-autobuild
    - pip install torch==1.12.0+cu116 torchvision==0.13.0+cu116 torchaudio==0.12.0 --extra-index-url https://download.pytorch.org/whl/cu116
    - export CUDA_HOME=/miniconda
    - python -c 'import samna'
    - pip install 'sinabs-exodus>=1.1' || exit_code=$?
    - if [ $exit_code -ne 0 ]; then echo "Exodus could not be installed"; fi;

  script:
    - pytest -v tests/tests_default -n auto --forked

unit_tests:
  stage: test
  parallel: 4

  before_script:
    - pip install --upgrade pip
    - conda install -c conda-forge cudatoolkit-dev=11.4.0=h5e8e339_5
    - pip install --upgrade .[all] --no-cache-dir
    - python -c 'import samna'
    - pip install 'sinabs-exodus>=1.1' || exit_code=$?
    - if [ $exit_code -ne 0 ]; then echo "Exodus could not be installed"; fi;

  script:
    - pytest -v tests/tests_default -n auto --forked

documentation_linting:
  stage: docs
  allow_failure: true

  before_script:
    - pip install --upgrade pip
    - pip install --upgrade .[all] --no-cache-dir

  script:
    - sphinx-build -n -b dummy docs docs/_build/html

docs_build:
  stage: docs
  allow_failure: true

  before_script:
    - pip install --upgrade pip
    - pip install .[all] --no-cache-dir

  script:
    - cp CHANGELOG.md docs/advanced
    - sphinx-build -b html docs docs/_build/html

  artifacts:
    paths:
      - docs/_build/html
    expire_in: 15 mins

dist_build:
  stage: build

  dependencies:
    - unit_tests

  before_script:
    - pip install --upgrade pip
    - pip install wheel

  script:
    - python setup.py sdist

  artifacts:
    paths:
      - dist

black-check:
  stage: test

  before_script:
    - pip install --upgrade pip
    - pip install black==23.1.0

  script:
    - python -m black --check rockpool tests

pages:
  stage: docs_deploy
  only:
    - master

  allow_failure: true

  dependencies:
    - docs_build

  script:
    - mv docs/_build/html/ public/

  artifacts:
    paths:
      - public

pypi_deploy:
  stage: deploy
  when: manual
  only:
    - master

  dependencies:
    - dist_build

  before_script:
    - pip install --upgrade pip
    - pip install -U twine

  script:
    - python -m twine upload dist/*
