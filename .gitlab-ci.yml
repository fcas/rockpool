stages:
  - test
  - build
  - deploy

unit_tests:
  stage: test
  image: aictx/ci-python-arch:latest
  tags:
    - python
    - aiCTX

  before_script:
    - pip install --upgrade pip
    - pip install --upgrade --force-reinstall torch
    - pip install --upgrade --force-reinstall torchvision
    - pip install .[all] --no-cache-dir


  script:
    - pytest -v tests

nest_tests:
  stage: test
  allow_failure: true
  when: manual
  image: aictx/ci-python-arch:latest
  tags:
    - python
    - aiCTX

  before_script:
    - pip install --upgrade pip
    - pip install --upgrade --force-reinstall torch
    - pip install --upgrade --force-reinstall torchvision
    - pip install .[all] --no-cache-dir


  script:
    - pytest -v test_nest

documentation_linting:
  stage: test
  allow_failure: true
  image: aictx/ci-python-arch:latest
  tags:
    - python
    - aiCTX

  before_script:
    - pip install --upgrade pip
    - pip install --upgrade --force-reinstall torch
    - pip install --upgrade --force-reinstall torchvision
    - pip install .[all] --no-cache-dir

  script:
    - sphinx-build -n -b dummy docs docs/_build/html

docs_build:
  stage: build
  allow_failure: true
  image: aictx/ci-python-arch:latest
  tags:
    - python
    - aiCTX

  before_script:
    - pip install --upgrade pip
    - pip install --upgrade --force-reinstall torch
    - pip install --upgrade --force-reinstall torchvision
    - pip install .[all] --no-cache-dir

  script:
    - sphinx-build -b html docs docs/_build/html

  artifacts:
    paths:
      - docs/_build/html
    expire_in: 15 mins

pages:
  stage: deploy
  only:
    - master

  allow_failure: true
  image: aictx/ci-python-arch:latest
  tags:
    - python
    - aiCTX

  dependencies:
    - docs_build

  script:
    - mv docs/_build/html/ public/

  artifacts:
    paths:
      - public

pypi:
  stage: deploy

  only:
    - master

  image: aictx/ci-python-arch:latest


  tags:
    - python
    - aiCTX

  dependencies:
    - unit_tests
    - nest_tests
    - documentation_linting
    - docs_build 

  script:
    - pip install -U twine
    - python setup.py sdist
    - python -m twine upload dist/*


  

